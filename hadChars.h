/**
 * @file hadChars.h
 * @brief 快速查找此字符是否包含在u8g2字库中
 * @note 此文件只适用于 u8g2_font_wqy12_t_gb2312
 */
#ifndef _FONT_HAD_CHARS_H
#define _FONT_HAD_CHARS_H
#include <Arduino.h>
#include <U8g2lib.h>
extern U8G2_SSD1306_128X64_NONAME_F_4W_HW_SPI u8g2;
#include <pgmspace.h>
/** @brief 快速查找此字符是否包含在u8g2字库中
    @param unicode 字符的unicode码
    @return 0 无 非0 目标字符宽度 */
uint8_t hasChar(uint16_t unicode);
/// @brief 是否在4dff前找到字符
uint8_t hasCharBefore4dff(uint16_t unicode);
/// @brief 是否在ffxx区间找到字符 (已内嵌)

/// @brief 转换编码
void unicode_to_utf_8(uint16_t unicode_v,char *a);

/** @brief 转换编码
    @return 0xffff 非法utf8字符 非0xffff Unicode值 */
uint16_t utf8_to_unicode(const char *a);

/// @brief 快速获取字符串宽度
uint16_t getUTF8WidthQuick(const char *s);

#define FONT_before_0x4dff_chars_COUNT 584
//#define FONT_0xFFxx_chars_COUNT 98
#define FONT_WIDTHS_IMPL_HADCHARS_H 34
static const uint16_t font_before_0x4dff_chars[FONT_before_0x4dff_chars_COUNT] PROGMEM{
0X0080,0X00A4,0X00A7,0X00A8,0X00B0,0X00B1,0X00D7,0X00E0,
0X00E1,0X00E8,0X00E9,0X00EA,0X00EC,0X00ED,0X00F2,0X00F3,
0X00F7,0X00F9,0X00FA,0X00FC,0X0101,0X0113,0X011B,0X012B,
0X014D,0X016B,0X01CE,0X01D0,0X01D2,0X01D4,0X01D6,0X01D8,
0X01DA,0X01DC,
//Below is 12px width.
0X02C7,0X02C9,0X0391,0X0392,0X0393,0X0394,0X0395,0X0396,
0X0397,0X0398,0X0399,0X039A,0X039B,0X039C,0X039D,0X039E,
0X039F,0X03A0,0X03A1,0X03A3,0X03A4,0X03A5,0X03A6,0X03A7,
0X03A8,0X03A9,0X03B1,0X03B2,0X03B3,0X03B4,0X03B5,0X03B6,
0X03B7,0X03B8,0X03B9,0X03BA,0X03BB,0X03BC,0X03BD,0X03BE,
0X03BF,0X03C0,0X03C1,0X03C3,0X03C4,0X03C5,0X03C6,0X03C7,
0X03C8,0X03C9,0X0401,0X0410,0X0411,0X0412,0X0413,0X0414,
0X0415,0X0416,0X0417,0X0418,0X0419,0X041A,0X041B,0X041C,
0X041D,0X041E,0X041F,0X0420,0X0421,0X0422,0X0423,0X0424,
0X0425,0X0426,0X0427,0X0428,0X0429,0X042A,0X042B,0X042C,
0X042D,0X042E,0X042F,0X0430,0X0431,0X0432,0X0433,0X0434,
0X0435,0X0436,0X0437,0X0438,0X0439,0X043A,0X043B,0X043C,
0X043D,0X043E,0X043F,0X0440,0X0441,0X0442,0X0443,0X0444,
0X0445,0X0446,0X0447,0X0448,0X0449,0X044A,0X044B,0X044C,
0X044D,0X044E,0X044F,0X0451,0X2015,0X2016,0X2018,0X2019,
0X201C,0X201D,0X2026,0X2030,0X2032,0X2033,0X203B,0X2103,
0X2116,0X2160,0X2161,0X2162,0X2163,0X2164,0X2165,0X2166,
0X2167,0X2168,0X2169,0X216A,0X216B,0X2190,0X2191,0X2192,
0X2193,0X2208,0X220F,0X2211,0X221A,0X221D,0X221E,0X2220,
0X2225,0X2227,0X2228,0X2229,0X222A,0X222B,0X222E,0X2234,
0X2235,0X2236,0X2237,0X223D,0X2248,0X224C,0X2260,0X2261,
0X2264,0X2265,0X226E,0X226F,0X2299,0X22A5,0X2312,0X2460,
0X2461,0X2462,0X2463,0X2464,0X2465,0X2466,0X2467,0X2468,
0X2469,0X2474,0X2475,0X2476,0X2477,0X2478,0X2479,0X247A,
0X247B,0X247C,0X247D,0X247E,0X247F,0X2480,0X2481,0X2482,
0X2483,0X2484,0X2485,0X2486,0X2487,0X2488,0X2489,0X248A,
0X248B,0X248C,0X248D,0X248E,0X248F,0X2490,0X2491,0X2492,
0X2493,0X2494,0X2495,0X2496,0X2497,0X2498,0X2499,0X249A,
0X249B,0X2500,0X2501,0X2502,0X2503,0X2504,0X2505,0X2506,
0X2507,0X2508,0X2509,0X250A,0X250B,0X250C,0X250D,0X250E,
0X250F,0X2510,0X2511,0X2512,0X2513,0X2514,0X2515,0X2516,
0X2517,0X2518,0X2519,0X251A,0X251B,0X251C,0X251D,0X251E,
0X251F,0X2520,0X2521,0X2522,0X2523,0X2524,0X2525,0X2526,
0X2527,0X2528,0X2529,0X252A,0X252B,0X252C,0X252D,0X252E,
0X252F,0X2530,0X2531,0X2532,0X2533,0X2534,0X2535,0X2536,
0X2537,0X2538,0X2539,0X253A,0X253B,0X253C,0X253D,0X253E,
0X253F,0X2540,0X2541,0X2542,0X2543,0X2544,0X2545,0X2546,
0X2547,0X2548,0X2549,0X254A,0X254B,0X25A0,0X25A1,0X25B2,
0X25B3,0X25C6,0X25C7,0X25CB,0X25CE,0X25CF,0X2605,0X2606,
0X2640,0X2642,0X3001,0X3002,0X3003,0X3005,0X3008,0X3009,
0X300A,0X300B,0X300C,0X300D,0X300E,0X300F,0X3010,0X3011,
0X3013,0X3014,0X3015,0X3016,0X3017,0X3041,0X3042,0X3043,
0X3044,0X3045,0X3046,0X3047,0X3048,0X3049,0X304A,0X304B,
0X304C,0X304D,0X304E,0X304F,0X3050,0X3051,0X3052,0X3053,
0X3054,0X3055,0X3056,0X3057,0X3058,0X3059,0X305A,0X305B,
0X305C,0X305D,0X305E,0X305F,0X3060,0X3061,0X3062,0X3063,
0X3064,0X3065,0X3066,0X3067,0X3068,0X3069,0X306A,0X306B,
0X306C,0X306D,0X306E,0X306F,0X3070,0X3071,0X3072,0X3073,
0X3074,0X3075,0X3076,0X3077,0X3078,0X3079,0X307A,0X307B,
0X307C,0X307D,0X307E,0X307F,0X3080,0X3081,0X3082,0X3083,
0X3084,0X3085,0X3086,0X3087,0X3088,0X3089,0X308A,0X308B,
0X308C,0X308D,0X308E,0X308F,0X3090,0X3091,0X3092,0X3093,
0X30A1,0X30A2,0X30A3,0X30A4,0X30A5,0X30A6,0X30A7,0X30A8,
0X30A9,0X30AA,0X30AB,0X30AC,0X30AD,0X30AE,0X30AF,0X30B0,
0X30B1,0X30B2,0X30B3,0X30B4,0X30B5,0X30B6,0X30B7,0X30B8,
0X30B9,0X30BA,0X30BB,0X30BC,0X30BD,0X30BE,0X30BF,0X30C0,
0X30C1,0X30C2,0X30C3,0X30C4,0X30C5,0X30C6,0X30C7,0X30C8,
0X30C9,0X30CA,0X30CB,0X30CC,0X30CD,0X30CE,0X30CF,0X30D0,
0X30D1,0X30D2,0X30D3,0X30D4,0X30D5,0X30D6,0X30D7,0X30D8,
0X30D9,0X30DA,0X30DB,0X30DC,0X30DD,0X30DE,0X30DF,0X30E0,
0X30E1,0X30E2,0X30E3,0X30E4,0X30E5,0X30E6,0X30E7,0X30E8,
0X30E9,0X30EA,0X30EB,0X30EC,0X30ED,0X30EE,0X30EF,0X30F0,
0X30F1,0X30F2,0X30F3,0X30F4,0X30F5,0X30F6,0X30FB,0X3105,
0X3106,0X3107,0X3108,0X3109,0X310A,0X310B,0X310C,0X310D,
0X310E,0X310F,0X3110,0X3111,0X3112,0X3113,0X3114,0X3115,
0X3116,0X3117,0X3118,0X3119,0X311A,0X311B,0X311C,0X311D,
0X311E,0X311F,0X3120,0X3121,0X3122,0X3123,0X3124,0X3125,
0X3126,0X3127,0X3128,0X3129,0X3220,0X3221,0X3222,0X3223,
0X3224,0X3225,0X3226,0X3227,0X3228,0X3229
};

static const uint8_t font_widths[FONT_WIDTHS_IMPL_HADCHARS_H] PROGMEM = {
/* 0x0080*/  6,/* 0x00a4*/  7,/* 0x00a7*/  6,/* 0x00a8*/  4,/* 0x00b0*/  5,/* 0x00b1*/  6,/* 0x00d7*/  6,/* 0x00e0*/  6,
/* 0x00e1*/  6,/* 0x00e8*/  6,/* 0x00e9*/  6,/* 0x00ea*/  6,/* 0x00ec*/  3,/* 0x00ed*/  3,/* 0x00f2*/  5,/* 0x00f3*/  6,
/* 0x00f7*/  6,/* 0x00f9*/  6,/* 0x00fa*/  6,/* 0x00fc*/  6,/* 0x0101*/  6,/* 0x0113*/  6,/* 0x011b*/  6,/* 0x012b*/  4,
/* 0x014d*/  6,/* 0x016b*/  6,/* 0x01ce*/  6,/* 0x01d0*/  4,/* 0x01d2*/  6,/* 0x01d4*/  6,/* 0x01d6*/  6,/* 0x01d8*/  6,
/* 0x01da*/  6,/* 0x01dc*/  6
};
//Cwcnt: 113
#endif